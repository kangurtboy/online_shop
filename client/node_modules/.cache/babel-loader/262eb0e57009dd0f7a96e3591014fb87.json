{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\full-shop\\\\client\\\\src\\\\components\\\\EditCategory.js\",\n    _s = $RefreshSig$();\n\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { createCategory, fetchCategory, updateCategory } from '../http/catalogAPI.js';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditCategory = props => {\n  _s();\n\n  const {\n    id,\n    show,\n    setShow,\n    setChange\n  } = props;\n  const [name, setName] = useState('');\n  const [valid, setValid] = useState(null);\n  useEffect(() => {\n    if (id) {\n      fetchCategory(id).then(data => {\n        setName(data.name);\n        setValid(data.name !== '');\n      }).catch(error => alert(error.response.data.message));\n    } else {\n      setName('');\n      setValid(null);\n    }\n  }, [id]);\n\n  const handleChange = event => {\n    setName(event.target.value);\n    setValid(event.target.value.trim() !== '');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const correct = name.trim() !== '';\n    setValid(correct);\n\n    if (correct) {\n      const data = {\n        name: name.trim()\n      };\n\n      const success = data => {\n        setShow(false);\n        setChange(state => !state);\n      };\n\n      const error = error => alert(error.response.data.message);\n\n      id ? updateCategory(id, data).then(success).catch(error) : createCategory(data).then(success).catch(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: () => setShow(false),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: [id ? 'Редактирование' : 'Создание', \" \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"name\",\n          value: name,\n          onChange: e => handleChange(e),\n          isValid: valid === true,\n          isInvalid: valid === false,\n          placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438...\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditCategory, \"9eh/09t09RKReI+MlKW7DUyNBFg=\");\n\n_c = EditCategory;\nexport default EditCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCategory\");","map":{"version":3,"sources":["D:/React/full-shop/client/src/components/EditCategory.js"],"names":["Modal","Button","Form","createCategory","fetchCategory","updateCategory","useState","useEffect","EditCategory","props","id","show","setShow","setChange","name","setName","valid","setValid","then","data","catch","error","alert","response","message","handleChange","event","target","value","trim","handleSubmit","preventDefault","correct","success","state","e"],"mappings":"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","sourcesContent":["import { Modal, Button, Form } from 'react-bootstrap'\r\nimport { createCategory, fetchCategory, updateCategory } from '../http/catalogAPI.js'\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst EditCategory = (props) => {\r\n    const { id, show, setShow, setChange } = props\r\n\r\n    const [name, setName] = useState('')\r\n    const [valid, setValid] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if(id) {\r\n            fetchCategory(id)\r\n                .then(\r\n                    data => {\r\n                        setName(data.name)\r\n                        setValid(data.name !== '')\r\n                    }\r\n                )\r\n                .catch(\r\n                    error => alert(error.response.data.message)\r\n                )\r\n        } else {\r\n            setName('')\r\n            setValid(null)\r\n        }\r\n    }, [id])\r\n\r\n    const handleChange = (event) => {\r\n        setName(event.target.value)\r\n        setValid(event.target.value.trim() !== '')\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const correct = name.trim() !== ''\r\n        setValid(correct)\r\n        if (correct) {\r\n            const data = {\r\n                name: name.trim()\r\n            }\r\n            const success = (data) => {\r\n                setShow(false)\r\n                setChange(state => !state)\r\n            }\r\n            const error = (error) => alert(error.response.data.message)\r\n            id ? updateCategory(id, data).then(success).catch(error) : createCategory(data).then(success).catch(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal show={show} onHide={() => setShow(false)}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{id ? 'Редактирование' : 'Создание'} категории</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form noValidate onSubmit={handleSubmit}>\r\n                    <Form.Control\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={e => handleChange(e)}\r\n                        isValid={valid === true}\r\n                        isInvalid={valid === false}\r\n                        placeholder=\"Название категории...\"\r\n                        className=\"mb-3\"\r\n                    />\r\n                    <Button type=\"submit\">Сохранить</Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditCategory"]},"metadata":{},"sourceType":"module"}