{"ast":null,"code":"var _jsxFileName = \"D:\\\\RaDaR\\\\React\\\\online\\\\shop\\\\client.v1\\\\src\\\\pages\\\\AdminOrder.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { adminGetOne as getOneOrder } from '../http/orderAPI.js';\nimport { Container, Spinner } from 'react-bootstrap';\nimport Order from '../components/Order.js';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminOrder = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [order, setOrder] = useState(null);\n  const [fetching, setFetching] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    getOneOrder(id).then(data => setOrder(data)).catch(error => setError(error.response.data.message)).finally(() => setFetching(false));\n  }, [id]);\n\n  if (fetching) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u0417\\u0430\\u043A\\u0430\\u0437 \\u2116 \", order.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Order, {\n      data: order,\n      admin: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminOrder, \"hRu2bXveRhZWpd9YOleKCG9lqu4=\", false, function () {\n  return [useParams];\n});\n\n_c = AdminOrder;\nexport default AdminOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminOrder\");","map":{"version":3,"sources":["D:/RaDaR/React/online/shop/client.v1/src/pages/AdminOrder.js"],"names":["useState","useEffect","adminGetOne","getOneOrder","Container","Spinner","Order","useParams","AdminOrder","id","order","setOrder","fetching","setFetching","error","setError","then","data","catch","response","message","finally"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAW,IAAIC,WAAxB,QAA2C,qBAA3C;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,iBAAnC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAASF,SAAS,EAAxB;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,WAAW,CAACM,EAAD,CAAX,CACKO,IADL,CAEQC,IAAI,IAAIN,QAAQ,CAACM,IAAD,CAFxB,EAIKC,KAJL,CAKQJ,KAAK,IAAIC,QAAQ,CAACD,KAAK,CAACK,QAAN,CAAeF,IAAf,CAAoBG,OAArB,CALzB,EAOKC,OAPL,CAQQ,MAAMR,WAAW,CAAC,KAAD,CARzB;AAUH,GAXQ,EAWN,CAACJ,EAAD,CAXM,CAAT;;AAaA,MAAIG,QAAJ,EAAc;AACV,wBAAO,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAIE,KAAJ,EAAW;AACP,wBAAO;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,SAAD;AAAA,4BACI;AAAA,2DAAaJ,KAAK,CAACD,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEC,KAAb;AAAoB,MAAA,KAAK,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAjCD;;GAAMF,U;UACaD,S;;;KADbC,U;AAmCN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { adminGetOne as getOneOrder } from '../http/orderAPI.js'\r\nimport { Container, Spinner } from 'react-bootstrap'\r\nimport Order from '../components/Order.js'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst AdminOrder = () => {\r\n    const { id } = useParams()\r\n    const [order, setOrder] = useState(null)\r\n    const [fetching, setFetching] = useState(true)\r\n    const [error, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getOneOrder(id)\r\n            .then(\r\n                data => setOrder(data)\r\n            )\r\n            .catch(\r\n                error => setError(error.response.data.message)\r\n            )\r\n            .finally(\r\n                () => setFetching(false)\r\n            )\r\n    }, [id])\r\n\r\n    if (fetching) {\r\n        return <Spinner animation=\"border\" />\r\n    }\r\n\r\n    if (error) {\r\n        return <p>{error}</p>\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1>Заказ № {order.id}</h1>\r\n            <Order data={order} admin={true} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AdminOrder"]},"metadata":{},"sourceType":"module"}