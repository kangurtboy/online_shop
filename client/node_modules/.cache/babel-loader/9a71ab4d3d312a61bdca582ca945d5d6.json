{"ast":null,"code":"var _jsxFileName = \"D:\\\\RaDaR\\\\React\\\\online\\\\shop\\\\client.v1\\\\src\\\\components\\\\CreateProperties.js\";\nimport { useState } from 'react';\nimport { Row, Col, Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateProperties = props => {\n  const {\n    properties,\n    setProperties\n  } = props;\n\n  const append = () => {\n    setProperties([...properties, {\n      name: '',\n      value: '',\n      number: Date.now()\n    }]);\n  };\n\n  const remove = number => {\n    setProperties(properties.filter(item => item.number !== number));\n  };\n\n  const change = (key, value, number) => {\n    setProperties(properties.map(item => item.number === number ? { ...item,\n      [key]: value\n    } : item));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"\\u0425\\u0430\\u0440\\u0430\\u043A\\u0442\\u0435\\u0440\\u0438\\u0441\\u0442\\u0438\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: append,\n      variant: \"outline-primary\",\n      size: \"sm\",\n      className: \"mb-2\",\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), properties.map(item => /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: 'name_' + item.number,\n          value: item.name,\n          onChange: e => change('name', e.target.value, item.number),\n          placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435...\",\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: 'value_' + item.number,\n          value: item.value,\n          onChange: e => change('value', e.target.value, item.number),\n          placeholder: \"\\u0417\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435...\",\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => remove(item.number),\n          size: \"sm\",\n          variant: \"outline-danger\",\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, item.number, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n};\n\n_c = CreateProperties;\nexport default CreateProperties;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProperties\");","map":{"version":3,"sources":["D:/RaDaR/React/online/shop/client.v1/src/components/CreateProperties.js"],"names":["useState","Row","Col","Button","Form","CreateProperties","props","properties","setProperties","append","name","value","number","Date","now","remove","filter","item","change","key","map","e","target"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\n\r\nconst CreateProperties = (props) => {\r\n    const { properties, setProperties } = props\r\n\r\n    const append = () => {\r\n        setProperties([...properties, {name: '', value: '', number: Date.now()}])\r\n    }\r\n    const remove = (number) => {\r\n        setProperties(properties.filter(item => item.number !== number))\r\n    }\r\n    const change = (key, value, number) => {\r\n        setProperties(properties.map(item => item.number === number ? {...item, [key]: value} : item))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h5>Характеристики</h5>\r\n            <Button onClick={append} variant=\"outline-primary\" size=\"sm\" className=\"mb-2\">\r\n                Добавить\r\n            </Button>\r\n            {properties.map(item => \r\n                <Row key={item.number} className=\"mb-2\">\r\n                    <Col>\r\n                        <Form.Control\r\n                            name={'name_' + item.number}\r\n                            value={item.name}\r\n                            onChange={e => change('name', e.target.value, item.number)}\r\n                            placeholder=\"Название...\"\r\n                            size=\"sm\"\r\n                        />\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Control\r\n                            name={'value_' + item.number}\r\n                            value={item.value}\r\n                            onChange={e => change('value', e.target.value, item.number)}\r\n                            placeholder=\"Значение...\"\r\n                            size=\"sm\"\r\n                        />\r\n                    </Col>\r\n                    <Col>\r\n                        <Button onClick={() => remove(item.number)} size=\"sm\" variant=\"outline-danger\">\r\n                            Удалить\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateProperties"]},"metadata":{},"sourceType":"module"}